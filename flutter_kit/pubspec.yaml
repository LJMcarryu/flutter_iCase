name: flutter_kit
description: "A new Flutter project."
publish_to: 'none' # Remove this line if you wish to publish to pub.dev
version: 1.0.0+1

environment:
  sdk: '>=3.4.3 <4.0.0'

dependencies:
  flutter:
    sdk: flutter

  cupertino_icons:

# 状态管理
#  provider:
  get:
  # 一个反应式缓存和数据绑定框架
#  riverpod:

  # 用于 HTTP 请求的可组合、多平台、基于 Future 的 API
  http:
  # 强大的 HTTP 网络包，支持拦截器、中止和取消请求、自定义适配器、变压器等
  dio:

  # 用于数据类 / 联合体 / 模式匹配 / 克隆的代码生成器
  freezed_annotation:
  json_annotation:

  # 低功耗蓝牙插件
  flutter_blue_plus:

  # 一组用于 Dart 的加密散列函数
  crypto:

  # 用于读取和写入简单键值对的 Flutter 插件。
  # 包装 iOS 上的 NSUserDefaults 和 Android 上的 SharedPreferences
  shared_preferences:
  # 一个轻量级且速度超快的键值数据库，用纯 Dart 编写
#  hive:

  # 用于启动 URL 的 Flutter 插件
  url_launcher:
  # A Flutter plugin that provides a WebView widget on Android and iOS.
#  webview_flutter:

  # 地理定位插件
#  geolocator:
  # 处理在 Android 和 iOS 上获取位置信息。它还会在位置发生变化时提供回调。
#  location:

 # Toast 库
#  fluttertoast:
  # 一款简洁轻量的 Flutter 加载/toast 小部件
  flutter_easyloading:

  # 小型、易于使用且可扩展的记录器，可打印漂亮的日志
  logger:
  # 高级的错误处理程序和记录器
  talker:
  talker_dio_logger:

# 用于创建模糊时间戳的库
#  timeago:

  # 用于显示来自互联网的图像并将其保存在缓存目录中
#  cached_network_image:

  # 用于显示本地通知的跨平台插件
#  flutter_local_notifications:
  # 使用 Flutter 上的自定义本地和推送通知吸引用户。
  # 获取实时事件，并借助 Awesome Notifications 绝不会错过任何用户互动。
#  awesome_notifications:

  # 一个适配屏幕和字体大小的 Flutter 插件，保证在不同机型上都能正常显示
  flutter_screenutil:
  # 添加闪光效果的简单方法
#  shimmer:
  # 包含一系列炫酷文本动画的 Flutter 包
  animated_text_kit:
  # 精美的预建动画可以轻松集成到任何 Flutter 应用程序中
#  animations:
  # 每个动画都是一个可定制的小部件
#  animate_do:
  # 一个高性能库，可以轻松在 Flutter 中添加几乎任何类型的动画效果。
#  flutter_animate:

  # 用于查找文件系统上的常用位置
  path_provider:
  # 该软件包允许您使用本机文件资源管理器选择单个或多个绝对文件路径，并支持扩展名过滤。
#  file_picker:
  # 权限插件
  permission_handler:
  # 用于发现 Android 和 iOS 上的网络（WiFi 和移动/蜂窝）连接状态
  connectivity_plus:
  # 提供有关设备（品牌、型号等）以及应用程序所运行的 Android 或 iOS 版本的详细信息
#  device_info_plus:
  # 用于查询应用程序包信息的 Flutter 插件，例如 iOS 上的 CFBundleVersion 或 Android 上的 versionCode
#  package_info_plus:

# 强大的插件使下载文件变得容易
#  flutter_downloader:

  # 使用背景颜色和启动画面自定义 Flutter 默认的白色原生启动画面。支持暗黑模式、全屏等
#  flutter_native_splash:
  # 该包可简化更新 Flutter 应用启动器图标的任务
#  flutter_launcher_icons:
  # 用于使用来自 fonts.google.com 的字体。支持 HTTP 获取、缓存和资产捆绑
#  google_fonts:
  # 简介屏幕允许您在应用首次启动时显示一个屏幕
#  introduction_screen:
  # 用于逐步展示/突出显示小部件
#  showcaseview:

  # 一个提供给 Flutter 滚动组件下拉刷新和上拉加载的 widget
  pull_to_refresh:
  # 用于从 Android 和 iOS 图片库中选择图像，并使用相机拍摄新照片
#  image_picker:
  # 一个简单的可缩放 Flutter 图像/内容小部件
#  photo_view:
  # 适用于 Android、iOS 和 Web 的 Flutter 插件支持裁剪图像
#  image_cropper:

  # 创建出色且功能强大的模态底部页面
  modal_bottom_sheet:
  # 可滑动列表项的 Flutter 实现，具有可关闭的定向滑动操作
  flutter_slidable:
  # 可拖动的 Flutter 小部件使实现 SlidingUpPanel 变得更加容易！
#  sliding_up_panel:

  # 旋转滑块小部件 轮播
#  carousel_slider:
  # 可定制的动画页面指示器，具有一组内置效果。
#  smooth_page_indicator:

  # 圆形和线性百分比指示器
  percent_indicator:

  # 提供 Flutter 网格布局集合（交错、砌体、绗缝、编织等）。
#  flutter_staggered_grid_view:
  # 一组使用 Flutter 动画的加载指示器
#  flutter_spinkit:
  # 用于创建徽章的软件包
#  badges:
  # 高度可定制、功能丰富的 Flutter 日历小部件
#  table_calendar:

  # 以简单的方式为 Android/iOS 键盘添加功能
#  keyboard_actions:

  # 用于您的资产、字体、颜色等的 Flutter 代码生成器——摆脱所有基于字符串的 API
#  flutter_gen:

  # 无需额外努力即可将已构建的小部件转换为骨架加载器
  skeletonizer:

  # 让五彩缤纷的纸屑洒满整个屏幕
#  confetti:

dev_dependencies:
  flutter_test:
    sdk: flutter

  flutter_lints:

  # 用于数据类 / 联合体 / 模式匹配 / 克隆的代码生成器
  build_runner:
  freezed:
  json_serializable:

flutter:

  uses-material-design: true